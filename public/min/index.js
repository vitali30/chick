const comentFetchs={async addComent(e){const t=new FormData;t.append("json",JSON.stringify(e));const s=await fetch("http://localhost:5000/coment/",{method:"POST",body:t}),o=await s.json();return viewFeed(),o},async getAllComents(){let e=await fetch("http://localhost:5000/coment/"),t=await e.json();return JSON.parse(t)}},USER="../asserts/images/user-example.png",NO_IMAGE="../asserts/images/noImage.jpg",NO_LOGIN="Your Login is not match our requirement",NO_PASSWORD="Your password is not match our requirement",LOGIN_REG_EXP=new RegExp("@"),PSW_REG_EXP=new RegExp("(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])"),HIDENN_CLASS="hiden",NO_MATCH="Your passwords is no match",SUCH_USER="there is no such user yet",ALREADY="This email is already used",UNCORRECT_PSW="Wrong password",ROUTE_EXP=/([^\/]+)$/g,feedFetchs={async addPost(e){const t=new FormData;t.append("json",JSON.stringify(e));const s=await fetch("http://localhost:5000/feed/",{method:"POST",body:t}),o=await s.json();return viewFeed(),o},async getAllFeedPosts(){let e=await fetch("http://localhost:5000/feed/"),t=await e.json();return JSON.parse(t)},async deletePostById(e){let t=await fetch("http://localhost:5000/feed/"+e,{method:"DELETE"}),s=await t.json();return viewFeed(),s},async changePostName(e,t){const s=new FormData;s.append("json",JSON.stringify(t));let o=await fetch("http://localhost:5000/feed/name/"+e,{method:"PUT",body:s});return await o.json()},async changePostBody(e,t){const s=new FormData;s.append("json",JSON.stringify(t));let o=await fetch("http://localhost:5000/feed/body/"+e,{method:"PUT",body:s});return await o.json()}};class FeedForm{constructor(){this.$buttonStart=document.querySelector(".feed_button"),this.$form=document.querySelector(".feed__form"),this.$buttonEnd=document.querySelector(".feed__form_close")}addListeners(){this.$buttonStart.onclick=()=>this.open(),this.$buttonEnd.onclick=()=>this.closeForm(),this.$form.addEventListener("submit",e=>this.updateUser(e))}open(){this.$form.classList.remove("settings__anim_before"),this.$form.classList.add("settings__anim_after"),this.$buttonStart.classList.add("not_display"),this.$form.reset()}closeForm(){this.$form.classList.remove("settings__anim_after"),this.$form.classList.add("settings__anim_before"),this.$buttonStart.classList.remove("not_display")}async updateUser(e){e.preventDefault();const t=document.querySelector("#feed_img").files[0];let s;if(t){s=(await userFetchs.sendUserPhoto(t)).result}else s="";const o=await userFetchs.getAuthLogin(),n=(await userFetchs.getOneUsersByLogin(o))[0];console.log(n);const r=document.querySelector("#feed_heading").value,a=document.querySelector("#feed_text").value,i=new Date;feedFetchs.addPost({login:n.login,authorID:n._id,img:s,name:r,text:a,date:i}),this.$form.reset(),this.closeForm()}}function addField(e,t){e.innerHTML=t}function checkUserLogin(e){const t=e.querySelector(".login__name").value,s=e.querySelector(".login__name_text");addField(s,"");let o=!1;return(!LOGIN_REG_EXP.test(t)||t.length<3||t.length>25)&&(o={message:NO_LOGIN,field:s}),{failLogin:o}}function checkUserPsw(e){const t=e.querySelector(".login__psw").value,s=e.querySelector(".login__psw_text");addField(s,"");let o=!1;return(!PSW_REG_EXP.test(t)||t.length<6||t.length>30)&&(o={message:NO_PASSWORD,field:s}),{failPsw:o}}async function checkRegistredUser(e,t,s){//!!!!!!!!!!!!!!
const o=e.querySelector(".login__name").value,n=e.querySelector(".login__name_text"),r=t.querySelector(".login__psw").value;let a=!1;const i=await userFetchs.getAllUsers(),c=await i.filter(e=>e.login===o);return s&&0!==c.length&&(a={message:ALREADY,field:n}),s||(0===c.length?a={message:SUCH_USER,field:n}:c[0].password!==r&&(a={message:UNCORRECT_PSW,field:n})),{failLocalStorage:a}}function checkPswMatching(e,t){const s=e.querySelector(".login__psw").value,o=t.querySelector(".login__psw").value,n=e.querySelector(".login__psw_text");let r=!1;return s!==o&&(r={message:NO_MATCH,field:n}),{failMatchPsw:r}}function checkResults(e){let t=!0;for(let s in e)if(e[s]){addField(e[s].field,e[s].message),t=!1;break}return t}const logIn=async()=>{const e=document.querySelector(".login__name"),t=document.querySelector(".login__psw");let s=Object.assign({},checkUserLogin(e),checkUserPsw(t),await checkRegistredUser(e,t));if(checkResults(s)){s={user:e.querySelector(".login__name").value,psw:t.querySelector(".login__psw").value}}else s=!1;return s},logUp=async()=>{const e=document.querySelector(".logup__name"),t=document.querySelector(".logup__psw_first"),s=document.querySelector(".logup__psw_second");let o=Object.assign({},checkUserLogin(e),checkPswMatching(t,s),checkUserPsw(t),checkUserPsw(s),await checkRegistredUser(e,t,!0));if(checkResults(o)){o={user:e.querySelector(".login__name").value,psw:t.querySelector(".login__psw").value}}else o=!1;return o};async function updateUserData(e){const t=(await userFetchs.getOneUsersByLogin(e))[0],s=document.querySelector(".user_column"),o=document.querySelector(".user__container_name"),n=document.querySelector(".user__container_status"),r=document.querySelector(".user__container_photo"),a=document.querySelector(".settings_button");s.classList.remove("not_display");const i=await userFetchs.getAuthLogin(),c=t.login;a.classList.remove("not_display"),c!==i&&a.classList.add("not_display"),t&&(o.innerHTML=`${t.firstName} ${t.lastName}`,n.innerHTML=t.status),""===t.photo?r.src="./img/noImage.jpg":r.src="http://localhost:5000/"+t.photo}const router={$currentUserName:document.querySelector(".user__container_name"),$currentUserStatus:document.querySelector(".user__container_status"),$membrsList:document.querySelector(".feed__members_list"),$feed:document.querySelector(".feed"),$membersList:document.querySelector(".feed__members"),$mainContent:document.querySelector(".content__container"),$navigation:document.querySelector(".navigation"),$greetingContainer:document.querySelector(".greeting__container"),$userColumn:document.querySelector(".user_column"),rout:{"":()=>{router.closeUser(),router.$mainContent.classList.add("not_display"),router.$navigation.classList.add("not_display"),router.$greetingContainer.classList.remove("not_display")},"#entered":()=>{router.hideUser(),router.hideGreeting(),router.closeFeed(),router.hideOneUser(),router.clearUserList()},"#entered/feed":async()=>{router.hideUser(),router.hideGreeting(),router.hideOneUser(),router.openFeed()},"#entered/members":e=>{router.hideUser(),router.hideGreeting(),router.closeFeed(),router.hideOneUser(),updateUsersList(),e&&updateUserData(e)},"#settings_form":()=>{}},hideOneUser(){this.$userColumn.classList.add("not_display")},clearUserList(){this.$membrsList.innerHTML=""},openFeed(){this.$feed.classList.remove("not_display"),this.$membersList.classList.add("not_display"),viewFeed()},closeFeed(){this.$feed.classList.add("not_display"),this.$membersList.classList.remove("not_display")},hideGreeting(){this.$mainContent.classList.remove("not_display"),this.$navigation.classList.remove("not_display"),this.$greetingContainer.classList.add("not_display")},async hideUser(){const e=await userFetchs.getAuthLogin(),t=await userFetchs.getOneUsersByLogin(e);document.querySelector(".header__user_name").innerText=`${t[0].firstName} ${t[0].lastName}`,document.querySelector(".header__user_name").title=`${t[0].firstName} ${t[0].lastName}`,document.querySelector(".header__user_link").href="#members/"+t[0].login,""===t[0].photo?document.querySelector(".header__user_link").style.backgroundImage="url(./img/noImage.jpg)":document.querySelector(".header__user_link").style.backgroundImage=`url(http://localhost:5000/${t[0].photo})`},closeUser(){document.querySelector(".header__user_name").innerText="",document.querySelector(".header__user_link").href="#",document.querySelector(".header__user_link").style.backgroundImage="url(./img/noImage.jpg)"},addListeners(){window.onhashchange=()=>this.checkHash(),document.addEventListener("DOMContentLoaded",()=>this.checkHash())},checkHash(){LOGIN_REG_EXP.test(location.hash)?this.rout["#entered/members"](location.hash.match(ROUTE_EXP)[0]):this.rout[location.hash]()}};async function updateUsersList(){const e=document.querySelector(".feed__members_list"),t=document.querySelector(".feed__members_one");e.innerHTML="";(await userFetchs.getAllUsers()).forEach(s=>{const o=t.cloneNode(!0);o.classList.remove("not_display"),o.id=s.login,o.querySelector(".member_link").href="#entered/members/"+s.login,""===s.photo?o.querySelector(".member_link").style.backgroundImage="url(./img/noImage.jpg)":o.querySelector(".member_link").style.backgroundImage=`url(http://localhost:5000/${s.photo})`,o.querySelector(".member_name").innerText=`${s.firstName} ${s.lastName}`,o.querySelector(".member_status").innerText=s.status,e.appendChild(o)})}const userFetchs={async sendUserPhoto(e){const t=new FormData;t.append("file",e);let s=await fetch("http://localhost:5000/user",{method:"POST",body:t});return await s.json()},async addOneUser(e,t){const s={login:e.user,firstName:t.firstName,lastName:t.lastName,password:e.psw,status:t.status,photo:"",priority:"",bday:"",gender:"",isAuth:!1},o=new FormData;o.append("json",JSON.stringify(s));let n=await fetch("http://localhost:5000/auth",{method:"POST",body:o});return await n.json()},async userAuth(e){let t=await fetch("http://localhost:5000/auth/in/"+e);return await t.json()},async userEscape(){let e=await fetch("http://localhost:5000/auth/esc");return await e.json()},async getAuthLogin(){let e=await fetch("http://localhost:5000/auth/current"),t=await e.json();return JSON.parse(t)[0].login},async getAllUsers(){let e=await fetch("http://localhost:5000/user/all"),t=await e.json();return JSON.parse(t)},async getOneUsersByLogin(e){let t=await fetch("http://localhost:5000/user/one/"+e),s=await t.json();return JSON.parse(s)},async getOneUsersByID(e){let t=await fetch("http://localhost:5000/user/oneId/"+e),s=await t.json();return JSON.parse(s)},async deleteUser(e){let t=await fetch("http://localhost:5000/user/"+e,{method:"DELETE"});return await t.json()},async updateUser(e,t){const s=new FormData;s.append("json",JSON.stringify(t));let o=await fetch("http://localhost:5000/user/"+e,{method:"PUT",body:s});return await o.json()},async updateUserName(e,t){const s=t.split(" "),o=new FormData;o.append("json",JSON.stringify({login:e,firstName:s[0],lastName:s[1]}));let n=await fetch("http://localhost:5000/user/name",{method:"PATCH",body:o});return await n.json()},async updateUserStatus(e,t){const s=new FormData;s.append("json",JSON.stringify({login:e,status:t}));let o=await fetch("http://localhost:5000/user/status",{method:"PATCH",body:s});return await o.json()}};class UserSettings{constructor(){this.$form=document.querySelector(".settings__container"),this.$buttonStart=document.querySelector(".settings_button"),this.$buttonEnd=document.querySelector(".close_settings"),this.$settingsContainer=document.querySelector(".settings_field")}open(){this.$form.classList.remove("settings__anim_before"),this.$form.classList.add("settings__anim_after"),this.$buttonStart.classList.add("not_display"),this.$form.reset()}closeForm(){this.$form.classList.remove("settings__anim_after"),this.$form.classList.add("settings__anim_before"),this.$buttonStart.classList.remove("not_display")}addListeners(){this.$buttonEnd.onclick=()=>this.closeForm(),this.$form.addEventListener("submit",e=>this.updateUser(e))}async updateUser(e){e.preventDefault();const t=document.querySelector("#photo").files[0],s=await userFetchs.getAuthLogin(),o=this.getData(s);if(t){const e=await userFetchs.sendUserPhoto(t);o.photo=e.result}await userFetchs.updateUser(s,o);this.closeForm(),updateUsersList(),updateUserData(s)}getData(e){const t=document.getElementById("name_first").value,s=document.getElementById("name_last").value,o=document.getElementById("psw").value,n=document.getElementById("status").value,r=document.getElementById("photo").value,a=document.getElementById("priority").checked,i=document.querySelector("input[type='radio']:checked").value;return{login:e,firstName:t,lastName:s,password:o,status:n,photo:r,priority:a,bday:document.getElementById("bday").value,gender:i,isAuth:!0}}}async function viewFeed(){const e=document.querySelector(".feed__post"),t=document.querySelector(".feed__container"),s=await feedFetchs.getAllFeedPosts(),o=document.createElement("hr");o.classList.add("break_line"),t.innerHTML="";const n=await comentFetchs.getAllComents();s.forEach(async s=>{const r=e.cloneNode(!0),a=o.cloneNode(!0);r.classList.remove("not_display"),r.id=""+s._id,r.querySelector(".feed__post_name").innerText=s.name,r.querySelector(".feed__post_name").title=s.name,r.querySelector(".feed__post_user").href="#members/"+s.login;const i=await userFetchs.getOneUsersByLogin(s.login);r.querySelector(".feed__post_user").innerText=`${i[0].firstName}  ${i[0].lastName}`,r.querySelector(".feed__post_user").title=`${i[0].firstName}  ${i[0].lastName}`,r.querySelector(".feed__post_image").src="http://localhost:5000/"+s.img,r.querySelector(".feed__post_description").innerText=s.text,r.querySelector(".feed__post_delete").classList.add(s.authorID),r.querySelector(".feed__post_edit").classList.add(s.authorID),r.querySelector(".feed__post_hide").classList.add(s.authorID),r.querySelector(".feed__post_delete").id=""+s._id,r.querySelector(".feed__post_edit").id=""+s._id,r.querySelector(".feed__post_hide").id=""+s._id,r.querySelector(".feed__post_coment").id=""+s._id,r.querySelector(".feed__post_delete").onclick=e=>deleteFeedPost(e.target),r.querySelector(".feed__post_edit").onclick=e=>editFeedPost(e.target,r),r.querySelector(".feed__post_hide").onclick=e=>hideFeedPost(e.target,r),r.querySelector(".feed__post_coment").onclick=e=>hideComentForm(e.target,r),r.querySelector(".feep__post_chat").innerHTML="";n.filter(e=>e.postID===s._id).forEach(async e=>{const t=await userFetchs.getOneUsersByID(e.authorID),s=document.querySelector(".coment__container").cloneNode(!0);s.classList.remove("not_display"),s.querySelector(".coment__container_link").href="#members/"+t[0].login,s.querySelector(".coment__container_link").style.backgroundImage=`url(http://localhost:5000/${t[0].photo})`,s.querySelector(".coment__container_text").innerText=e.comentText,r.querySelector(".feep__post_chat").appendChild(s)}),t.appendChild(r),t.appendChild(a)})}async function editFeedPost(e,t){const s=localStorage.getItem("auth");if(e.classList.contains(s)){const s=t.querySelector(".feed__post_name"),o=document.querySelector("#input_example").cloneNode(!0);o.classList.remove("not_display"),o.classList.add("feed_input"),o.placeholder=s.innerText,s.innerHTML="",s.appendChild(o),o.oninput=t=>{feedFetchs.changePostName(e.id,t.target.value)};const n=t.querySelector(".feed__post_description"),r=document.querySelector("#textarea_example").cloneNode(!0);r.classList.remove("not_display"),r.classList.add("feed_input"),r.placeholder=n.innerText,n.innerHTML="",n.appendChild(r),r.oninput=t=>{feedFetchs.changePostBody(e.id,t.target.value)},document.onclick=e=>{e.target.classList.contains("feed_input")||location.reload()}}}async function deleteFeedPost(e){const t=localStorage.getItem("auth");e.classList.contains(t)&&await feedFetchs.deletePostById(e.id)}async function hideFeedPost(e,t){t.querySelector(".feed__post_description").classList.toggle("full_body"),t.querySelector(".feed__post_name").classList.toggle("full_name"),e.classList.toggle("full_button")}async function hideComentForm(e,t){const s=t.querySelector(".feed__coment_testarea"),o=t.querySelector(".feed__coment_container");o.classList.toggle("not_display"),s.focus(),document.onclick=e=>{e.target.classList.contains("feed__coment_testarea")||e.target.classList.contains("feed__post_coment")||o.classList.add("not_display")},t.querySelector(".feed__coment_form").onsubmit=t=>{t.preventDefault();const n=s.value,r=e.id,a=localStorage.getItem("auth");""!==n&&(comentFetchs.addComent({postID:r,authorID:a,comentText:n}),o.classList.add("not_display"),s.value="")}}class Controller{constructor(){this.view=new View,this.model=new Model,this.$greetingContainer=document.querySelector(".greeting__container"),this.$dialog=document.querySelector(".entering_dialog"),this.$logInForm=document.querySelector(".login__container"),this.$logUpForm=document.querySelector(".logup__container"),this.$settingsForm=document.querySelector(".settings"),this.$logOutApp=document.querySelector(".navigation__menu_logout"),this.$userSettingsButton=document.querySelector(".settings_button"),this.settings=new UserSettings,this.settings.addListeners(),this.feedForm=new FeedForm,this.feedForm.addListeners()}addListeners(){this.$greetingContainer.onclick=e=>this.view.startDialog(e),this.$dialog.addEventListener("click",e=>this.view.closeDialog(e)),this.$dialog.addEventListener("click",e=>this.view.toggleForm(e)),this.$logOutApp.onclick=()=>{this.view.switchApp(),localStorage.removeItem("auth"),userFetchs.userEscape()},this.$logInForm.addEventListener("submit",e=>this.loginSubmit(e)),this.$logUpForm.addEventListener("submit",e=>this.logUpSubmit(e)),document.addEventListener("click",e=>this.toggleNameStatusInputs(e)),document.addEventListener("click",e=>this.deleteCurrentMember(e)),this.$userSettingsButton.onclick=()=>this.settings.open()}async loginSubmit(e){e.preventDefault();const t=await logIn();if(t){const e=await userFetchs.getOneUsersByLogin(t.user);localStorage.setItem("auth",e[0]._id),await userFetchs.userAuth(e[0]._id),this.enterApp(t)}}async logUpSubmit(e){e.preventDefault();const t=await logUp();t&&(this.view.switchSettingForm(),this.$settingsForm.onsubmit=async e=>{e.preventDefault();const s=this.model.collectInputs();this.view.switchSettingForm(),this.view.switchLogForm();const o=await userFetchs.addOneUser(t,s);o&&(localStorage.setItem("auth",o),await userFetchs.userAuth(o),this.enterApp(t))})}async enterApp(e){this.$dialog.close(),this.view.switchApp(),location.hash="#entered/members/"+e.user}async toggleNameStatusInputs(e){if(document.querySelectorAll(".member__input").length>0&&!e.target.classList.contains("member__input"))location.reload();else if(e.target.classList.contains("member_name")||e.target.classList.contains("member_status")){const t=await userFetchs.getAuthLogin();e.target.parentNode.id===t&&this.view.showLocalInput(e.target)}}async deleteCurrentMember(e){if(e.target.classList.contains("member_delete")){const t=await userFetchs.deleteUser(e.target.parentNode.id);console.log(t),"user deleted"==t&&(location.hash="#entered/members")}}}class Model{constructor(){}collectInputs(){return{firstName:document.querySelector("#entering__name_first").value,lastName:document.querySelector("#entering__name_last").value,status:document.querySelector(".entering_status").value}}}class View{constructor(){this.$dialog=document.querySelector(".entering_dialog"),this.$logInForm=document.querySelector(".login__container"),this.$logUpForm=document.querySelector(".logup__container"),this.$settingsForm=document.querySelector(".settings"),this.$greetingContainer=document.querySelector(".greeting__container"),this.$mainContent=document.querySelector(".content__container"),this.$navigation=document.querySelector(".navigation"),this.$inputExample=document.getElementById("input_example")}startDialog(e){switch(e.target.id){case"greeting_logup":this.switchLogForm();case"greeting_login":this.$dialog.showModal()}}closeDialog(e){switch(e.target.id){case"close__settings":this.switchSettingForm();case"close__logup":this.switchLogForm();case"close__login":this.$dialog.close()}}toggleForm(e){switch(e.target.id){case"swith_to_logup":case"swith_to_login":this.switchLogForm();break;case"swith_setting_logup":this.switchSettingForm()}}switchLogForm(){this.$logInForm.classList.toggle("animation_before"),this.$logInForm.classList.toggle("animation_after"),this.$logUpForm.classList.toggle("animation_after"),this.$logUpForm.classList.toggle("animation_before")}switchSettingForm(){this.$logUpForm.classList.toggle("animation_before"),this.$logUpForm.classList.toggle("animation_after"),this.$settingsForm.classList.toggle("animation_after"),this.$settingsForm.classList.toggle("animation_before")}switchApp(){this.$mainContent.classList.toggle("not_display"),this.$greetingContainer.classList.toggle("not_display"),this.$navigation.classList.toggle("not_display")}showLocalInput(e){const t=this.$inputExample.cloneNode(!0);t.classList.remove("not_display"),t.classList.add("member__input"),t.placeholder=e.innerHTML,e.innerHTML="",e.appendChild(t),t.oninput=t=>{e.classList.contains("member_name")?userFetchs.updateUserName(e.parentNode.id,t.target.value):e.classList.contains("member_status")&&userFetchs.updateUserStatus(e.parentNode.id,t.target.value)}}}const controller1=new Controller;controller1.addListeners(),router.addListeners();var socket=new WebSocket("ws://localhost:5001/");socket.onopen=function(){socket.send("Go")},socket.onmessage=function(){location.reload()},socket.onclose=function(e){e.wasClean||location.reload()};